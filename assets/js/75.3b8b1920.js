(window.webpackJsonp=window.webpackJsonp||[]).push([[75],{620:function(a,n,o){"use strict";o.r(n);var s=o(25),t=Object(s.a)({},(function(){var a=this,n=a.$createElement,o=a._self._c||n;return o("ContentSlotsDistributor",{attrs:{"slot-key":a.$parent.slotKey}},[o("h1",{attrs:{id:"console"}},[o("a",{staticClass:"header-anchor",attrs:{href:"#console"}},[a._v("#")]),a._v(" console")]),a._v(" "),o("h2",{attrs:{id:"console-log"}},[o("a",{staticClass:"header-anchor",attrs:{href:"#console-log"}},[a._v("#")]),a._v(" console.log()")]),a._v(" "),o("p",[a._v("输出普通信息")]),a._v(" "),o("h2",{attrs:{id:"console-info"}},[o("a",{staticClass:"header-anchor",attrs:{href:"#console-info"}},[a._v("#")]),a._v(" console.info()")]),a._v(" "),o("p",[a._v("输出提示信息")]),a._v(" "),o("h2",{attrs:{id:"console-error"}},[o("a",{staticClass:"header-anchor",attrs:{href:"#console-error"}},[a._v("#")]),a._v(" console.error()")]),a._v(" "),o("p",[a._v("输出错误板信息【可展开详情】")]),a._v(" "),o("h2",{attrs:{id:"console-warn"}},[o("a",{staticClass:"header-anchor",attrs:{href:"#console-warn"}},[a._v("#")]),a._v(" console.warn()")]),a._v(" "),o("p",[a._v("输出提示板信息【可展开详情】")]),a._v(" "),o("h2",{attrs:{id:"console-dir"}},[o("a",{staticClass:"header-anchor",attrs:{href:"#console-dir"}},[a._v("#")]),a._v(" console.dir()")]),a._v(" "),o("p",[a._v("显示对象所有的属性和方法")]),a._v(" "),o("h2",{attrs:{id:"console-table"}},[o("a",{staticClass:"header-anchor",attrs:{href:"#console-table"}},[a._v("#")]),a._v(" console.table()")]),a._v(" "),o("p",[a._v("传入对象/数组 以表格的形式输出 其中括号里面的参数是对象名称/数组名")]),a._v(" "),o("h2",{attrs:{id:"运行时间"}},[o("a",{staticClass:"header-anchor",attrs:{href:"#运行时间"}},[a._v("#")]),a._v(" 运行时间")]),a._v(" "),o("h3",{attrs:{id:"console-time"}},[o("a",{staticClass:"header-anchor",attrs:{href:"#console-time"}},[a._v("#")]),a._v(" console.time()")]),a._v(" "),o("h3",{attrs:{id:"console-timeend"}},[o("a",{staticClass:"header-anchor",attrs:{href:"#console-timeend"}},[a._v("#")]),a._v(" console.timeEnd()")]),a._v(" "),o("p",[a._v("可以将成对的console.time()和console.timeEnd() 之间代码的运行时间输出到控制台上")]),a._v(" "),o("div",{staticClass:"language- extra-class"},[o("pre",{pre:!0,attrs:{class:"language-text"}},[o("code",[a._v("console.time('计时器');\nfor (var i = 0; i < 1000; i++) {\n  for (var j = 0; j < 1000; j++) {}\n}\nconsole.timeEnd('计时器');\n//  计时器: 3.794921875ms\n")])])]),o("p",[a._v("注意:如果两个方法都不传参数  则输出  default: 4.063232421875ms")]),a._v(" "),o("div",{staticClass:"language- extra-class"},[o("pre",[o("code",[a._v("要么不传参,要么给一样的参数,否则错误。\n")])])]),o("h2",{attrs:{id:"分组"}},[o("a",{staticClass:"header-anchor",attrs:{href:"#分组"}},[a._v("#")]),a._v(" 分组")]),a._v(" "),o("h3",{attrs:{id:"console-group"}},[o("a",{staticClass:"header-anchor",attrs:{href:"#console-group"}},[a._v("#")]),a._v(" console.group()")]),a._v(" "),o("h3",{attrs:{id:"console-groupend"}},[o("a",{staticClass:"header-anchor",attrs:{href:"#console-groupend"}},[a._v("#")]),a._v(" console.groupEnd()")]),a._v(" "),o("p",[a._v("在 Web控制台上创建一个新的分组.随后输出到控制台上的内容都会被添加一个缩进,表示该内容属于当前分组,直到调用console.groupEnd()之后,当前分组结束.")]),a._v(" "),o("p",[a._v("console.group() 默认为展开状态")]),a._v(" "),o("p",[a._v("console.groupCollapsed() 默认问收起状态")]),a._v(" "),o("div",{staticClass:"language- extra-class"},[o("pre",{pre:!0,attrs:{class:"language-text"}},[o("code",[a._v("console.group('第一层');\n  console.log('第一层里面');\nconsole.group('第二层');\n  console.log('第二层里面');\nconsole.groupEnd();\nconsole.groupEnd();\n\n 第一层\n    第一层里面\n    第二层\n        第二层里面\n")])])]),o("h2",{attrs:{id:"console-trace"}},[o("a",{staticClass:"header-anchor",attrs:{href:"#console-trace"}},[a._v("#")]),a._v(" console.trace()")]),a._v(" "),o("blockquote",[o("p",[a._v("用来跟踪函数的调用轨迹，在大型的项目中是很有用的")])]),a._v(" "),o("div",{staticClass:"language- extra-class"},[o("pre",{pre:!0,attrs:{class:"language-text"}},[o("code",[a._v('function add(a, b) {\n    console.trace("Add function");\n    return a + b;\n}\n\nfunction add3(a, b) {\n    return add2(a, b);\n}\n\nfunction add2(a, b) {\n    return add1(a, b);\n}\n\nfunction add1(a, b) {\n    return add(a, b);\n}\n\nvar x = add3(1, 1);\n\n函数调用的轨迹如下\n\nVM677:3 Add function\nadd @ VM677:3\nadd1 @ VM677:16\nadd2 @ VM677:12\nadd3 @ VM677:8\n(anonymous) @ VM677:19  //匿名函数\n\n')])])]),o("h2",{attrs:{id:"console-count"}},[o("a",{staticClass:"header-anchor",attrs:{href:"#console-count"}},[a._v("#")]),a._v(" console.count()")]),a._v(" "),o("p",[a._v("输出执行次数")]),a._v(" "),o("div",{staticClass:"language- extra-class"},[o("pre",{pre:!0,attrs:{class:"language-text"}},[o("code",[a._v("(function() {\n  for (var i = 0; i < 5; i++) {\n    console.count('count');\n  }\n})();\ncount: 1\ncount: 2\ncount: 3\ncount: 4\ncount: 5\n\n")])])]),o("h2",{attrs:{id:"console-log-的高级玩法"}},[o("a",{staticClass:"header-anchor",attrs:{href:"#console-log-的高级玩法"}},[a._v("#")]),a._v(" console.log 的高级玩法")]),a._v(" "),o("p",[a._v("占位符")]),a._v(" "),o("ul",[o("li",[a._v("%s 格式化成字符串输出")]),a._v(" "),o("li",[a._v("%d or %i 格式化成整数输出")]),a._v(" "),o("li",[a._v("%f 格式化成浮点数输出")]),a._v(" "),o("li",[a._v("%o 转化成展开的DOM元素输出")]),a._v(" "),o("li",[a._v("%O 转化成JavaScript对象输出")]),a._v(" "),o("li",[a._v("%c 字符串增加样式输出")])]),a._v(" "),o("div",{staticClass:"language- extra-class"},[o("pre",{pre:!0,attrs:{class:"language-text"}},[o("code",[a._v('var arr = ["小明","小红"];\nvar obj1 = {\n\tname:"lisa"\n}\nconsole.log("欢迎%s和%s两位新同学",arr[0],arr[1]);\nconsole.log("圆周率的整数部分:%d,带小数部分:%f",3.14159,3.14159);\nconsole.log("%O",obj1);\n//欢迎小明和小红两位新同学\n//圆周率的整数部分:3,带小数部分:3.14159\n//Object\n')])])])])}),[],!1,null,null,null);n.default=t.exports}}]);