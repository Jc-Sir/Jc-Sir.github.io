(window.webpackJsonp=window.webpackJsonp||[]).push([[167],{735:function(t,s,a){"use strict";a.r(s);var e=a(25),n=Object(e.a)({},(function(){var t=this,s=t.$createElement,a=t._self._c||s;return a("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[a("h1",{attrs:{id:"vue自定义事件"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#vue自定义事件"}},[t._v("#")]),t._v(" Vue自定义事件")]),t._v(" "),a("h2",{attrs:{id:"事件绑定"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#事件绑定"}},[t._v("#")]),t._v(" 事件绑定")]),t._v(" "),a("p",[t._v("每个 Vue 实例都实现了事件接口 (Events interface)")]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("使用 $on(eventName) 监听事件\n使用 $emit(eventName) 触发事件\n")])])]),a("div",{staticClass:"custom-block warning"},[a("p",{staticClass:"custom-block-title"},[t._v("WARNING")]),t._v(" "),a("p",[t._v("[注意]Vue 的事件系统分离自浏览器的"),a("code",[t._v("EventTarget API")]),t._v("。尽管它们的运行类似，但是 "),a("code",[t._v("$on")]),t._v(" 和 "),a("code",[t._v("$emit")]),t._v(" 不是"),a("code",[t._v("addEventListener")]),t._v(" 和 "),a("code",[t._v("dispatchEvent")]),t._v(" 的别名")]),t._v(" "),a("p",[t._v("[注意]不能用 $on 侦听子组件抛出的事件，而必须在模板里直接用 v-on 绑定")])]),t._v(" "),a("div",{staticClass:"language-template extra-class"},[a("div",{staticClass:"highlight-lines"},[a("br"),a("div",{staticClass:"highlighted"},[t._v(" ")]),a("br"),a("br"),a("br"),a("br"),a("br"),a("br"),a("br"),a("br"),a("br"),a("br")]),a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v('\x3c!-- 父组件 --\x3e\n<Child @increment="incrementCounter"></Child>\n\ndata(){\n    count:0\n},\nmethods:{\n    incrementCounter(){\n        this.count++;\n    }\n}\n')])])]),a("div",{staticClass:"language-template extra-class"},[a("div",{staticClass:"highlight-lines"},[a("br"),a("br"),a("br"),a("div",{staticClass:"highlighted"},[t._v(" ")]),a("br"),a("br"),a("br")]),a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("<button @click=\"handleIncrement\"> +1 </button>\nmethods:{\n    handleIncrement(){\n        this.$emit('increment')\n    }\n}\n")])])]),a("h2",{attrs:{id:"命名约定"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#命名约定"}},[t._v("#")]),t._v(" 命名约定")]),t._v(" "),a("p",[t._v("自定义事件实质上也是属于HTML的属性，所以其在HTML模板中，"),a("strong",[t._v("最好使用中划线形式")]),t._v("。")]),t._v(" "),a("div",{staticClass:"language-template extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v('<child @pass-data="getData"></child>\n')])])]),a("p",[t._v("而子组件中触发事件时，同样使用中划线形式")]),t._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("this")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("$emit")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'pass-data'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])]),a("h2",{attrs:{id:"数据传递"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#数据传递"}},[t._v("#")]),t._v(" 数据传递")]),t._v(" "),a("p",[t._v("子组件通过 "),a("code",[t._v("$emit")]),t._v(" 可以触发事件，"),a("strong",[t._v("第一个参数为要触发的事件，第二个事件为要传递的数据")]),t._v("。")]),t._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("this")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("$emit")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'pass-data'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("this")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("childMsg"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])]),a("p",[t._v("父组件通过"),a("code",[t._v("$on")]),t._v("监听事件，事件处理函数的参数则为接收的数据。")]),t._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token function"}},[t._v("getData")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("val")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("this")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("msg "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" val\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),a("h2",{attrs:{id:"sync-修饰符"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#sync-修饰符"}},[t._v("#")]),t._v(" .sync 修饰符")]),t._v(" "),a("blockquote",[t._v("2.0 中移除 .sync 的理由")]),t._v("\n在有些情况下，我们可能需要对一个 prop 进行“双向绑定”。不幸的是，真正的双向绑定会带来维护上的问题，因为子组件可以变更父组件，且在父组件和子组件两侧都没有明显的变更来源。\n"),a("blockquote",[t._v("2.3.0+ 重新引入了 .sync 修饰符")]),t._v("\n但是这次它只是作为一个编译时的语法糖存在。它会被扩展为一个自动更新父组件属性的 v-on 侦听器\n"),a("div",{staticClass:"language-template extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v('<comp :foo.sync="bar"></comp>\n\n\x3c!-- 扩展为 --\x3e\n\n<comp :foo="bar" @update:foo="val => bar = val"></comp>\n')])])]),a("p",[t._v("当子组件需要更新 foo 的值时，它需要显式地触发一个更新事件：")]),t._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("this")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("$emit")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'update:foo'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" newValue"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])]),a("div",{staticClass:"custom-block tip"},[a("p",{staticClass:"custom-block-title"},[t._v("TIP")]),t._v(" "),a("p",[t._v("因此，可以使用 "),a("code",[t._v(".sync")]),t._v(" 来简化自定义事件的操作，实现子组件向父组件的数据传递。")])])])}),[],!1,null,null,null);s.default=n.exports}}]);