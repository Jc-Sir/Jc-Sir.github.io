(window.webpackJsonp=window.webpackJsonp||[]).push([[84],{627:function(t,a,s){"use strict";s.r(a);var n=s(25),e=Object(n.a)({},(function(){var t=this,a=t.$createElement,s=t._self._c||a;return s("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[s("h1",{attrs:{id:"使用原生-js-实现事件委托"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#使用原生-js-实现事件委托"}},[t._v("#")]),t._v(" 使用原生 JS 实现事件委托")]),t._v(" "),s("h2",{attrs:{id:"什么是事件委托"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#什么是事件委托"}},[t._v("#")]),t._v(" 什么是事件委托?")]),t._v(" "),s("p",[t._v("用个例子就可以很简单的解释事件委托是怎么一回事了：")]),t._v(" "),s("blockquote",[s("p",[t._v("假设一个公司有三个职员在网上买了东西,那么他们三个在接收快递的时候有两种方法。\n第一种：等快递来的时候,自己下楼去拿。\n第二种：快递来的时候,先经过公司前台,然后在分发给每个人。\n然而,正常情况下,第一种显然比较浪费劳动力,所以现实情况我们都采取第二种方法。\n而且,第二种方法有个优势,新加入的职员也可以享受代签快递的服务。")])]),t._v(" "),s("p",[t._v("我们把场景换到网页上：")]),t._v(" "),s("blockquote",[s("p",[t._v("假设一个网页中有三个li,并且绑定了事件,那么它们三个在触发事件的时候有两种方法。\n第一种：当用户点击了li的时候,li触发事件\n第二种：当用户点击了ul的时候,ul中的li触发事件\n优势,显而易见就是新加入的li也可以通过ul触发。")])]),t._v(" "),s("p",[t._v("也就是说事件委托,就是把本该由li触发的事件,交由ul代理。")]),t._v(" "),s("h2",{attrs:{id:"为什么要用事件委托"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#为什么要用事件委托"}},[t._v("#")]),t._v(" 为什么要用事件委托?")]),t._v(" "),s("p",[t._v("道理我都懂,可为什么要交给ul委托呢?我把每个li都绑定一遍不好吗?")]),t._v(" "),s("p",[s("strong",[t._v("一般来说，dom需要有事件处理程序，我们都会直接给它设事件处理程序就好了，那如果是很多的dom需要添加事件处理呢？比如我们有100个li，每个li都有相同的click点击事件，可能我们会用for循环的方法，来遍历所有的li，然后给它们添加事件，那这么做会存在什么影响呢？")])]),t._v(" "),s("p",[t._v("在JavaScript中，添加到页面上的事件处理程序数量将直接关系到页面的整体运行性能，因为需要不断的与dom节点进行交互，访问dom的次数越多，引起浏览器重绘与重排的次数也就越多，就会延长整个页面的交互就绪时间，这就是为什么性能优化的主要思想之一就是减少DOM操作的原因；如果要用事件委托，就会将所有的操作放到js程序里面，与dom的操作就只需要交互一次，这样就能大大的减少与dom的交互次数，提高性能；")]),t._v(" "),s("p",[t._v("每个函数都是一个对象，是对象就会占用内存，对象越多，内存占用率就越大，自然性能就越差了（内存不够用，是硬伤，哈哈），比如上面的100个li，就要占用100个内存空间，如果是1000个，10000个呢，那只能说呵呵了，如果用事件委托，那么我们就可以只对它的父级（如果只有一个父级）这一个对象进行操作，这样我们就需要一个内存空间就够了，是不是省了很多，自然性能就会更好。")]),t._v(" "),s("h2",{attrs:{id:"事件委托的原理"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#事件委托的原理"}},[t._v("#")]),t._v(" 事件委托的原理")]),t._v(" "),s("h3",{attrs:{id:"冒泡"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#冒泡"}},[t._v("#")]),t._v(" 冒泡")]),t._v(" "),s("p",[t._v("事件委托是利用事件的冒泡原理来实现的，何为事件冒泡呢？举个例子：")]),t._v(" "),s("ol",[s("li",[t._v("先创建三个不同颜色的div,X>Y>Z\n"),s("img",{attrs:{src:"http://upload-images.jianshu.io/upload_images/4337988-37693187845a65bf.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240",alt:"我们先创建三个div"}})]),t._v(" "),s("li",[t._v("然后分别给XYZ绑定事件\n"),s("img",{attrs:{src:"http://upload-images.jianshu.io/upload_images/4337988-45f36ee353bd2325.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240",alt:"绑定事件"}})]),t._v(" "),s("li",[t._v("然后就可以测试冒泡事件了,我们先点击一下最里面的黄色div,发现三个事件都触发了\n"),s("img",{attrs:{src:"http://upload-images.jianshu.io/upload_images/4337988-01f625531f219e2f.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240",alt:"三个事件都触发了"}})]),t._v(" "),s("li",[t._v("我们再点击一下绿色div,发现只触发了绿色div和红色div的事件.\n"),s("img",{attrs:{src:"http://upload-images.jianshu.io/upload_images/4337988-8561b9f82d4e7ba2.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240",alt:"只触发了绿色div和红色div的事件"}})]),t._v(" "),s("li",[t._v("所以我们可以总结,事件冒泡的规则就是事件从最深的节点开始，然后逐步向上传播事件。同时这也是事件委托，委托它们父级代为执行事件。")])]),t._v(" "),s("p",[s("img",{attrs:{src:"http://upload-images.jianshu.io/upload_images/4337988-ef026ce54d376fb4.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240",alt:""}})]),t._v(" "),s("h2",{attrs:{id:"如何实现委托"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#如何实现委托"}},[t._v("#")]),t._v(" 如何实现委托?")]),t._v(" "),s("p",[t._v("既然是委托,那么直接给li的父级ul绑定事件就可以了啊。但是这里存在一个BUG!\n我们换个例子：\nul下有4个li,并且给ul绑定事件,为了方便演示给ul和li加一个border\n"),s("img",{attrs:{src:"http://upload-images.jianshu.io/upload_images/4337988-241d910a7679af62.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240",alt:""}})]),t._v(" "),s("p",[s("strong",[t._v("BUG就是当我们点击红色和绿色之间的时候也会触发事件!!!")])]),t._v(" "),s("p",[s("img",{attrs:{src:"http://upload-images.jianshu.io/upload_images/4337988-fe134b3f88648ae4.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240",alt:""}})]),t._v(" "),s("p",[t._v("那么这个BUG如何处理呢?\n"),s("strong",[t._v("如果在用户点击的时候判断一下是不是点击了li，如果是就触发，如果不是就不触发，是不是就解决了?")])]),t._v(" "),s("p",[s("img",{attrs:{src:"http://upload-images.jianshu.io/upload_images/4337988-b1b6387fe832c2bd.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240",alt:"加一步判断"}}),t._v("\n这样看似成功了,只有点击了li才会触发事件.\n"),s("strong",[t._v("但是并不完美,因为当li有子元素的时候就会失效!!!")])]),t._v(" "),s("p",[s("img",{attrs:{src:"http://upload-images.jianshu.io/upload_images/4337988-fd45f15459ce67ee.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240",alt:"这个时候点击选项1的时候并不触发事件"}})]),t._v(" "),s("p",[t._v("那么我们该如何继续优化呢?\n当我们发现被点击的元素不是li的时候,那么我们就找被点击元素的父元素,判断它是不是li,如果不是就继续找.......以此类推,当我们找到li那么就触发事件,如果没找到,就不触发。")]),t._v(" "),s("p",[s("img",{attrs:{src:"http://upload-images.jianshu.io/upload_images/4337988-826d7b2b9b2ad110.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240",alt:"触发成功"}}),t._v("\n最终代码:")]),t._v(" "),s("div",{staticClass:"language-js extra-class"},[s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" ul "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" document"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("querySelector")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'.a'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\nul"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("addEventListener")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'click'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("e")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" 被点击的元素 "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" e"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("target\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("while")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("被点击的元素"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("tagName "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("!==")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'LI'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        被点击的元素 "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" 被点击的元素"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("parentNode\n        "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("被点击的元素 "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("===")]),t._v(" ul"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n            被点击的元素 "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("null")]),t._v("\n            "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("break")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("被点击的元素"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        console"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'触发成功'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" \n")])])])])}),[],!1,null,null,null);a.default=e.exports}}]);