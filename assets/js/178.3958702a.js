(window.webpackJsonp=window.webpackJsonp||[]).push([[178],{744:function(t,a,e){"use strict";e.r(a);var n=e(25),s=Object(n.a)({},(function(){var t=this,a=t.$createElement,e=t._self._c||a;return e("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[e("h1",{attrs:{id:"组件data选项为何是函数"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#组件data选项为何是函数"}},[t._v("#")]),t._v(" 组件data选项为何是函数")]),t._v(" "),e("p",[t._v("1、Vue组件可能存在多个实例，如果使用对象形式定义data，则会导致多个实例共用一个data对象，无论哪个实例将状态更新了，都将影响其他组件实例。使用函数的方式，在inintData时会将其视为工厂函数返回全新的data对象。有效规避了组件之间状态污染问题。在Vue根实例中则无该限制，因为根实例只能有一个。")]),t._v(" "),e("p",[t._v("2、vue中data必须是函数是为了"),e("strong",[t._v("保证组件的独立性和可复用性")]),t._v("，data是一个函数，组件实例化的时候这个函数将会被调用，返回一个对象，计算机会给这个对象分配一个内存地址，你实例化几次，就分配几个内存地址，他们的地址都不一样，所以每个组件中的数据不会相互干扰，改变其中一个组件的状态，其它组件不变。")])])}),[],!1,null,null,null);a.default=s.exports}}]);